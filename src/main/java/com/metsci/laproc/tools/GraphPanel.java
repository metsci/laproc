package com.metsci.laproc.tools;

import com.jogamp.opengl.util.FPSAnimator;
import com.metsci.glimpse.canvas.NewtSwingGlimpseCanvas;
import com.metsci.glimpse.docking.View;
import com.metsci.glimpse.plot.Plot2D;
import com.metsci.laproc.datareference.GraphReference;
import com.metsci.laproc.plotting.Graph;
import com.metsci.laproc.uicomponents.GraphDisplayer;
import com.metsci.laproc.utils.IObserver;

/**
 * Example panel for displaying a graph
 * Created by porterjc on 9/26/2016.
 */
public class GraphPanel implements ITool, IObserver<GraphReference> {
    private NewtSwingGlimpseCanvas canvas;
    private GraphDisplayer graphDisplayer;

    /**
     * Simple constructor
     * @param reference graph reference for the application
     * @param graphDisplayer An object capable of displaying a graph in this panel
     */

    public GraphPanel(GraphReference reference, GraphDisplayer graphDisplayer){
        reference.addObserver(this);
        canvas = new NewtSwingGlimpseCanvas();
        new FPSAnimator(canvas.getGLDrawable(), 120).start();
        this.graphDisplayer = graphDisplayer;
        this.addGraphToCanvas(graphDisplayer);
    }

	/**
     * Takes a graph and properly builds a canvas from the layout generated by the graph
     * @param displayer graph displayer for the graph to add
     */
    public void addGraphToCanvas(GraphDisplayer displayer) {
        canvas.removeAllLayouts();
        Plot2D plot = displayer.getLayout();
        canvas.addLayout(plot);
        this.graphDisplayer = displayer;
    }

    /**
     * Get the canvas for the panel
     * @return canvas for the panel
     */
    public NewtSwingGlimpseCanvas getCanvas(){
        return canvas;
    }

    public View getView() {
        return new View("Graph", this.getCanvas(), "Graph", false);
    }

    public int getDefaultPosition() {
        return ITool.CENTERPOSITION;
    }

    /**
     * Update the graph when the reference is updated
     * @param reference graph reference for the application
     */
    public void update(GraphReference reference) {
        canvas.removeAllLayouts();
        Graph graph = reference.getGraph();
        graphDisplayer.setGraph(graph);
        Plot2D plot2D = graphDisplayer.getLayout();
        canvas.addLayout(plot2D);
    }
}
